<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.account_holder.mapper.AccountHolderCustomMapper">
  
  
  <resultMap id="BaseResultMap" type="demo.account_holder.pojo.po.AccountHolder" extends="demo.account_holder.mapper.AccountHolderMapper.BaseResultMap">
    
  </resultMap>

  <insert id="insert">
    insert into account_holder (account_holder_id, account_holder_name, 
      gender, birth, mobile_number
      )
    values (#{accountHolderId,jdbcType=INTEGER}, #{accountHolderName,jdbcType=CHAR}, 
      #{gender,jdbcType=CHAR}, #{birth,jdbcType=DATE}, #{mobileNumber,jdbcType=BIGINT}
      )
  </insert>

  <insert id="insertSelective">
    insert into account_holder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountHolderId != null">
        account_holder_id,
      </if>
      <if test="accountHolderName != null">
        account_holder_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="mobileNumber != null">
        mobile_number,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountHolderId != null">
        #{accountHolderId,jdbcType=INTEGER},
      </if>
      <if test="accountHolderName != null">
        #{accountHolderName,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="mobileNumber != null">
        #{mobile_number,jdbcType=BIGINT},
      </if>
      
    </trim>
  </insert>
  
  <select id="findAccountHolderByID" parameterType="int" resultMap="BaseResultMap">
    select * from account_holder where account_holder_id = #{id} 
  </select>
  
  <select id="findAccountHolderByName" parameterType="String" resultMap="BaseResultMap" >
    select * from account_holder where account_holder_name like concat('%', #{holderName}, '%')
  </select>
  
  <insert id="addAccountHolder">
    insert into account_holder 
      
      <trim prefix="(" suffix=")" suffixOverrides=",">
      account_holder_name, 
      gender,
      user_id,
      <if test="birth != null">
      birth,
      </if>
      </trim>
      
    values 
      (
      #{accountHolderName}, 
      #{gender},
      #{userId}
      <if test="birth != null">
      , #{birth}
      </if>
      )
  </insert>
  
  <delete id="deleteAccountHolderByID" parameterType="int">
    delete from account_holder where account_holder_id = #{id}
  </delete>
  
  <update id="updateHolder">
    update account_holder 
    set
    account_holder_name = #{accountHolderName},
    gender = #{gender},
    birth = #{birth}
    where
    account_holder_id = #{accountHolderId} 
  </update>

  <select id="getCurrentHolders" resultMap="BaseResultMap">
    select
      holder.*
        
    from 
      users 
        
      left join account_holder as holder
        on users.user_id = holder.user_id
    
    where
      users.user_name = #{userName}

  </select>
  

</mapper>