<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.article.article.mapper.ArticleBurnMapper">

  <resultMap id="BaseResultMap" type="demo.article.article.pojo.po.ArticleBurn">
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="read_limit" jdbcType="INTEGER" property="readLimit" />
    <result column="valid_time" jdbcType="TIMESTAMP" property="validTime" />
    <result column="read_key" jdbcType="CHAR" property="readKey" />
    <result column="burn_key" jdbcType="CHAR" property="burnKey" />
    <result column="is_burned" jdbcType="BIT" property="isBurned" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <insert id="insert" parameterType="demo.article.article.pojo.po.ArticleBurn">
    insert into article_burn (article_id, read_count, read_limit, 
      valid_time, read_key, burn_key, 
      is_burned, create_time)
    values (#{articleId,jdbcType=BIGINT}, #{readCount,jdbcType=INTEGER}, #{readLimit,jdbcType=INTEGER}, 
      #{validTime,jdbcType=TIMESTAMP}, #{readKey,jdbcType=CHAR}, #{burnKey,jdbcType=CHAR}, 
      #{isBurned,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="demo.article.article.pojo.po.ArticleBurn">
    insert into article_burn
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="readCount != null">
        read_count,
      </if>
      <if test="readLimit != null">
        read_limit,
      </if>
      <if test="validTime != null">
        valid_time,
      </if>
      <if test="readKey != null">
        read_key,
      </if>
      <if test="burnKey != null">
        burn_key,
      </if>
      <if test="isBurned != null">
        is_burned,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="readLimit != null">
        #{readLimit,jdbcType=INTEGER},
      </if>
      <if test="validTime != null">
        #{validTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readKey != null">
        #{readKey,jdbcType=CHAR},
      </if>
      <if test="burnKey != null">
        #{burnKey,jdbcType=CHAR},
      </if>
      <if test="isBurned != null">
        #{isBurned,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="findArticleByReadKey" resultType="demo.article.article.pojo.result.ArticleBurnResult">
    select
      ars.content,
      arb.read_count as readCount,
      arb.read_limit as readLimit,
      arb.valid_time as validTime,
      arb.read_key as readKey,
      arb.burn_key as burnKey,
      arb.is_burned as isBurned

    from
      article_short as ars

      left join article_burn as arb
        on ars.article_id = arb.article_id

    where
      is_burned = 0
      and arb.valid_time > now()
      and arb.read_key = #{readKey}
  </select>

  <update id="burnArticleByBurnKey">
    update article_burn set is_burned = true where burn_key = #{burnKey}
  </update>

  <update id="readCountPlus">
    update article_burn set read_count = read_count + 1 where read_key = #{readKey}
  </update>

  <update id="lastRead">
    update article_burn set read_count = read_count + 1 , is_burned = true where read_key = #{readkey}
  </update>

</mapper>