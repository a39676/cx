<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="demo.article.article.mapper.ArticleLongSummaryMapper">

  <resultMap id="BaseResultMap" type="demo.article.article.pojo.po.ArticleLongSummary">
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="private_key" jdbcType="CHAR" property="privateKey" />
  </resultMap>

  <resultMap id="ArticleLongSummaryVO" type="demo.article.article.pojo.vo.ArticleLongSummaryVO" extends="BaseResultMap">
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
  </resultMap>

  <insert id="insert" parameterType="demo.article.article.pojo.po.ArticleLongSummary">
    insert into article_long_summary (article_id, user_id, article_title, 
      path, create_time, private_key
      )
    values (#{articleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{articleTitle,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{privateKey,jdbcType=CHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="demo.article.article.pojo.po.ArticleLongSummary">
    insert into article_long_summary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="privateKey != null">
        private_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="privateKey != null">
        #{privateKey,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <sql id="findArticleLongSummaryPrefix">
    select
      al.article_title as articleTitle,
      al.create_time as createTime,
      als.article_id as articleId,
      als.private_key as privateKey,
      als.user_id,
      als.path,
      udt.nick_name as nickName,
      udt.head_image as headImage

    from 
      article_long as al

      left join article_long_summary as als
        on al.article_id = als.article_id

      left join users_detail as udt
        on al.user_id = udt.user_id
  </sql>

  <select id="findArticleLongSummary" resultType="demo.article.article.pojo.bo.ArticleLongSummaryBO">
    <include refid="findArticleLongSummaryPrefix"></include>
    <where>
      and al.article_id = #{articleId}
    </where>
  </select>

  <select id="findArticleLongSummaryList" resultType="demo.article.article.pojo.bo.ArticleLongSummaryBO">
    <include refid="findArticleLongSummaryPrefix"></include>

      left join article_hot as ah
        on al.article_id = ah.article_id

    <where>
      <if test="isHot == null or isHot == false">
        and (ah.hot_level is null or ah.valid_time &lt; now())
      </if>
      <if test="isHot != null and isHot == true">
        and (ah.hot_level is not null and ah.valid_time &lt; now())
      </if>
      <if test="articleChannelId != null">
        and al.channel_id = #{articleChannelId}
      </if>
      <if test="userId != null">
        and al.user_id = #{userId}
      </if>
      <if test="title != null">
        and al.article_title like concat ('%', #{title}, '%')
      </if>
      <if test="startTime != null">
        and al.create_time &gt;= #{startTime}
      </if>
      <if test="endTime != null">
        and al.create_time &lt;= #{endTime}
      </if>
      <if test="isPass != null">
        and al.is_pass = #{isPass}
      </if>
      <if test="isPass == null">
        and al.is_pass = true
      </if>
      <if test="isDelete != null">
        and al.is_Delete = #{isDelete}
      </if>
      <if test="isDelete == null">
        and al.is_Delete = false
      </if>
      <if test="isEdited != null">
        and al.is_edited = #{isEdited}
      </if>
      <if test="isEdited == null">
        and al.is_edited = false
      </if>
      <if test="isReject != null">
        and al.is_reject = #{isReject}
      </if>
      <if test="isReject == null">
        and al.is_reject = false
      </if>
    </where>
    <if test="desc != null and desc == false">
      order by al.create_time
    </if>
    <if test="desc == null or desc == true">
      order by al.create_time desc
    </if>
    <if test="isHot != null and isHot == true">
      order by ah.hot_level desc
    </if>
    <if test="limit != null">
      limit #{limit}
    </if>
    <if test="limit == null">
      limit 5
    </if>
  </select>

  <!-- 准备废弃 -->
  <select id="findArticleHotSummaryList" resultType="demo.article.article.pojo.bo.ArticleLongSummaryBO">
    <include refid="findArticleLongSummaryPrefix"></include>

      left join article_hot as ah
        on al.article_id = ah.article_id

    <where>
      and ah.hot_level is not null
      and ah.valid_time &gt; now()
      <if test="channelId != null">
        and al.channel_id = #{channelId}
      </if>
    </where>

    order by ah.hot_level desc
  </select>
  
  <update id="batchUpdatePrivateKey">
    <foreach item="summary" index="index" collection="list"
      open="" separator=";" close="">
      update 
        article_long_summary
      set
        private_key = #{summary.privateKey}
      where
        article_id = #{summary.articleId}
    </foreach>
  </update>

  <select id="findArticleLongSummaryListIds" resultType="Long">
    select
      als.article_id
    from
      article_long_summary as als
    <where>
      <if test="startTime != null">
        and als.create_time &gt;= #{startTime}
      </if>
      <if test="endTime != null">
        and als.create_time &lt;= #{endTime}
      </if>
    </where>
  </select>
</mapper>