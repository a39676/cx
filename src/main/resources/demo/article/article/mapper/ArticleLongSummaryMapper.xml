<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.article.article.mapper.ArticleLongSummaryMapper">
  <resultMap id="BaseResultMap" type="demo.article.article.pojo.po.ArticleLongSummary">
    <id column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, user_id, article_title, file_path, create_time
  </sql>
  <select id="selectByExample" parameterType="demo.article.article.pojo.po.ArticleLongSummaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_long_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article_long_summary
    where article_id = #{articleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article_long_summary
    where article_id = #{articleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="demo.article.article.pojo.po.ArticleLongSummaryExample">
    delete from article_long_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.article.article.pojo.po.ArticleLongSummary">
    insert into article_long_summary (article_id, user_id, article_title,
      file_path, create_time)
    values (#{articleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{articleTitle,jdbcType=VARCHAR},
      #{filePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="demo.article.article.pojo.po.ArticleLongSummary">
    insert into article_long_summary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.article.article.pojo.po.ArticleLongSummaryExample" resultType="java.lang.Long">
    select count(*) from article_long_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article_long_summary
    <set>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.articleTitle != null">
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article_long_summary
    set article_id = #{record.articleId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.article.article.pojo.po.ArticleLongSummary">
    update article_long_summary
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="articleTitle != null">
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.article.article.pojo.po.ArticleLongSummary">
    update article_long_summary
    set user_id = #{userId,jdbcType=BIGINT},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where article_id = #{articleId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="demo.article.article.pojo.po.ArticleLongSummaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_long_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <sql id="findArticleLongSummaryPrefix">
    select
      al.article_title as articleTitle,
      al.create_time as createTime,
      als.article_id as articleId,
      als.user_id,
      als.file_path as filePath

    from
      article_long as al

      left join article_long_summary as als
        on al.article_id = als.article_id
  </sql>

  <select id="findArticleLongSummary" resultType="demo.article.article.pojo.bo.ArticleLongSummaryBO">
    <include refid="findArticleLongSummaryPrefix"></include>
    <where>
      and al.article_id = #{articleId}
    </where>
  </select>

  <select id="findArticleLongSummaryList" resultType="demo.article.article.pojo.bo.ArticleLongSummaryBO">
    <include refid="findArticleLongSummaryPrefix"></include>

      left join article_hot as ah
        on al.article_id = ah.article_id

    <where>
      <if test="isHot == null or isHot == false">
        and (ah.hot_level is null or ah.valid_time &lt; now())
      </if>
      <if test="isHot != null and isHot == true">
        and (ah.hot_level is not null and ah.valid_time &lt; now())
      </if>
      <if test="channelIdList != null">
        and al.channel_id in
        <foreach item="channelId" index="index" collection="channelIdList" open="(" separator="," close=")">
          #{channelId}
        </foreach>
      </if>
      <if test="title != null">
        and al.article_title like concat ('%', #{title}, '%')
      </if>
      <if test="startTime != null">
        and al.create_time &gt;= #{startTime}
      </if>
      <if test="endTime != null">
        and al.create_time &lt;= #{endTime}
      </if>
      <if test="isPass != null">
        and al.is_pass = #{isPass}
      </if>
      <if test="isPass == null">
        and al.is_pass = true
      </if>
      <if test="isDelete != null">
        and al.is_Delete = #{isDelete}
      </if>
      <if test="isDelete == null">
        and al.is_Delete = false
      </if>
      <if test="isEdited != null">
        and al.is_edited = #{isEdited}
      </if>
      <if test="isEdited == null">
        and al.is_edited = false
      </if>
      <if test="isReject != null">
        and al.is_reject = #{isReject}
      </if>
      <if test="isReject == null">
        and al.is_reject = false
      </if>
    </where>
    <if test="desc != null and desc == false">
      order by al.create_time
    </if>
    <if test="desc == null or desc == true">
      order by al.create_time desc
    </if>
    <if test="isHot != null and isHot == true">
      order by ah.hot_level desc
    </if>
    <if test="limit != null">
      limit #{limit}
    </if>
    <if test="limit == null">
      limit 5
    </if>
  </select>

  <!-- 准备废弃 -->
  <select id="findArticleHotSummaryList" resultType="demo.article.article.pojo.bo.ArticleLongSummaryBO">
    <include refid="findArticleLongSummaryPrefix"></include>

      left join article_hot as ah
        on al.article_id = ah.article_id

    <where>
      and ah.hot_level is not null
      and ah.valid_time &gt; now()
      and al.is_delete = false
      <if test="channelId != null">
        and al.channel_id = #{channelId}
      </if>
    </where>

    order by ah.hot_level desc
  </select>

  <select id="findArticleLongSummaryListIds" resultType="Long">
    select
      als.article_id
    from
      article_long_summary as als
    <where>
      <if test="startTime != null">
        and als.create_time &gt;= #{startTime}
      </if>
      <if test="endTime != null">
        and als.create_time &lt;= #{endTime}
      </if>
    </where>
  </select>
</mapper>
