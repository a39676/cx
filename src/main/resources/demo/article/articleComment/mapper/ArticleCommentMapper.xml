<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.article.articleComment.mapper.ArticleCommentMapper">
  <resultMap id="BaseResultMap" type="demo.article.articleComment.pojo.po.ArticleComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="tmp_nick_name" jdbcType="VARCHAR" property="tmpNickName" />
    <result column="tmp_email" jdbcType="VARCHAR" property="tmpEmail" />
    <result column="tmp_mobile" jdbcType="BIGINT" property="tmpMobile" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="reply_of" jdbcType="BIGINT" property="replyOf" />
    <result column="remote_ip" jdbcType="BIGINT" property="remoteIp" />
    <result column="forward_ip" jdbcType="BIGINT" property="forwardIp" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="is_pass" jdbcType="BIT" property="isPass" />
    <result column="is_reject" jdbcType="BIT" property="isReject" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, tmp_nick_name, tmp_email, tmp_mobile, article_id, path, create_time, 
    reply_of, remote_ip, forward_ip, is_delete, is_pass, is_reject
  </sql>
  <select id="selectByExample" parameterType="demo.article.articleComment.pojo.po.ArticleCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="demo.article.articleComment.pojo.po.ArticleCommentExample">
    delete from article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.article.articleComment.pojo.po.ArticleComment">
    insert into article_comment (id, user_id, tmp_nick_name, 
      tmp_email, tmp_mobile, article_id, 
      path, create_time, reply_of, 
      remote_ip, forward_ip, is_delete, 
      is_pass, is_reject)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{tmpNickName,jdbcType=VARCHAR}, 
      #{tmpEmail,jdbcType=VARCHAR}, #{tmpMobile,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, 
      #{path,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{replyOf,jdbcType=BIGINT}, 
      #{remoteIp,jdbcType=BIGINT}, #{forwardIp,jdbcType=BIGINT}, #{isDelete,jdbcType=BIT}, 
      #{isPass,jdbcType=BIT}, #{isReject,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="demo.article.articleComment.pojo.po.ArticleComment">
    insert into article_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="tmpNickName != null">
        tmp_nick_name,
      </if>
      <if test="tmpEmail != null">
        tmp_email,
      </if>
      <if test="tmpMobile != null">
        tmp_mobile,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="replyOf != null">
        reply_of,
      </if>
      <if test="remoteIp != null">
        remote_ip,
      </if>
      <if test="forwardIp != null">
        forward_ip,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="isPass != null">
        is_pass,
      </if>
      <if test="isReject != null">
        is_reject,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="tmpNickName != null">
        #{tmpNickName,jdbcType=VARCHAR},
      </if>
      <if test="tmpEmail != null">
        #{tmpEmail,jdbcType=VARCHAR},
      </if>
      <if test="tmpMobile != null">
        #{tmpMobile,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyOf != null">
        #{replyOf,jdbcType=BIGINT},
      </if>
      <if test="remoteIp != null">
        #{remoteIp,jdbcType=BIGINT},
      </if>
      <if test="forwardIp != null">
        #{forwardIp,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="isPass != null">
        #{isPass,jdbcType=BIT},
      </if>
      <if test="isReject != null">
        #{isReject,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.article.articleComment.pojo.po.ArticleCommentExample" resultType="java.lang.Long">
    select count(*) from article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.tmpNickName != null">
        tmp_nick_name = #{record.tmpNickName,jdbcType=VARCHAR},
      </if>
      <if test="record.tmpEmail != null">
        tmp_email = #{record.tmpEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.tmpMobile != null">
        tmp_mobile = #{record.tmpMobile,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.replyOf != null">
        reply_of = #{record.replyOf,jdbcType=BIGINT},
      </if>
      <if test="record.remoteIp != null">
        remote_ip = #{record.remoteIp,jdbcType=BIGINT},
      </if>
      <if test="record.forwardIp != null">
        forward_ip = #{record.forwardIp,jdbcType=BIGINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.isPass != null">
        is_pass = #{record.isPass,jdbcType=BIT},
      </if>
      <if test="record.isReject != null">
        is_reject = #{record.isReject,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article_comment
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      tmp_nick_name = #{record.tmpNickName,jdbcType=VARCHAR},
      tmp_email = #{record.tmpEmail,jdbcType=VARCHAR},
      tmp_mobile = #{record.tmpMobile,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=BIGINT},
      path = #{record.path,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      reply_of = #{record.replyOf,jdbcType=BIGINT},
      remote_ip = #{record.remoteIp,jdbcType=BIGINT},
      forward_ip = #{record.forwardIp,jdbcType=BIGINT},
      is_delete = #{record.isDelete,jdbcType=BIT},
      is_pass = #{record.isPass,jdbcType=BIT},
      is_reject = #{record.isReject,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.article.articleComment.pojo.po.ArticleComment">
    update article_comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="tmpNickName != null">
        tmp_nick_name = #{tmpNickName,jdbcType=VARCHAR},
      </if>
      <if test="tmpEmail != null">
        tmp_email = #{tmpEmail,jdbcType=VARCHAR},
      </if>
      <if test="tmpMobile != null">
        tmp_mobile = #{tmpMobile,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyOf != null">
        reply_of = #{replyOf,jdbcType=BIGINT},
      </if>
      <if test="remoteIp != null">
        remote_ip = #{remoteIp,jdbcType=BIGINT},
      </if>
      <if test="forwardIp != null">
        forward_ip = #{forwardIp,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="isPass != null">
        is_pass = #{isPass,jdbcType=BIT},
      </if>
      <if test="isReject != null">
        is_reject = #{isReject,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.article.articleComment.pojo.po.ArticleComment">
    update article_comment
    set user_id = #{userId,jdbcType=BIGINT},
      tmp_nick_name = #{tmpNickName,jdbcType=VARCHAR},
      tmp_email = #{tmpEmail,jdbcType=VARCHAR},
      tmp_mobile = #{tmpMobile,jdbcType=BIGINT},
      article_id = #{articleId,jdbcType=BIGINT},
      path = #{path,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      reply_of = #{replyOf,jdbcType=BIGINT},
      remote_ip = #{remoteIp,jdbcType=BIGINT},
      forward_ip = #{forwardIp,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=BIT},
      is_pass = #{isPass,jdbcType=BIT},
      is_reject = #{isReject,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select
    id="findCommentPage"
    resultMap="BaseResultMap">
    select
      *
    from
      article_comment
    <where>
      <if test="articleId != null">
        and article_id = #{articleId}
      </if>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="isDelete != null">
        and is_delete = #{isDelete}
      </if>
      <if test="isPass != null">
        and is_pass = #{isPass}
      </if>
      <if test="isReject != null">
        and is_reject = #{isReject}
      </if>
      <if test="userId != null">
        and user_id = #{userId}
      </if>
      <if test="replyOf != null">
        and reply_of = #{replyOf}
      </if>
      <if test="startTime != null">
        and create_time &gt;= #{startTime}
      </if>
    </where>
    order by create_time desc
    <if test="limit != null">
      limit #{limit}
    </if>
    <if test="limit == null">
      limit 5
    </if>
  </select>
  
  <select id="findArticleIdWithCommentWaitingForReview" resultType="Long">
    select
      article_id
    from
      article_comment
    <where>
      is_pass = false
      and is_delete = false
      <if test="isReject != null">
        and is_reject = #{isReject}
      </if>
      <if test="isReject == null">
        and is_reject = false
      </if>
      and article_id in
      <foreach close=")" collection="articleIdList" item="articleId" open="(" separator=",">
        #{articleId}
      </foreach>
    </where>
  </select>
</mapper>