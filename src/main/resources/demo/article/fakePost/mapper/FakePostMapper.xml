<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.article.fakePost.mapper.FakePostMapper">

  <select id="findPassedArticleIdListByPeriod" resultType="ArticleLong">
    select  
      al.article_id,
      al.create_time
    from
      article_long as al
    where
      al.create_time between #{startTime} and #{endTime}
      and is_pass = true
      and user_id between 50 and 99
  </select>

  <insert id="batchInserEvaluationStore">
    <foreach item="evaluationStoreElement" index="index" collection="list"
      open="" separator=";" close=";">
      insert into
        article_evaluation_store(
          evaluation_type, 
          post_object_id, 
          update_time, 
          evaluation_code, 
          evaluation_count
        )
      value(
        #{evaluationStoreElement.evaluationType}, 
        #{evaluationStoreElement.postObjectId}, 
        now(), 
        #{evaluationStoreElement.evaluationCode}, 
        #{evaluationStoreElement.evaluationCount}
        )
      on duplicate key update
        update_time = now(), evaluation_count = evaluation_count + #{evaluationStoreElement.evaluationCount}
    </foreach>
  </insert>

  <select id="findArticleIdNotPassAndPostByShadow" resultType="ArticleLong">
    select
      al.article_id,
      al.channel_id,
      al.user_id
    from
      article_long as al
    where
      al.is_pass = false
      and al.is_delete = false
      and al.is_reject = false
      and al.user_id in 
      <foreach item="userId" index="index" collection="userIdList"
      open="(" separator="," close=")">
        #{userId}
      </foreach>
      and al.channel_id = #{channelId}
    order by al.create_time, al.article_id
    limit #{limit}
  </select>

  <update id="modifyArticleInfo">
    update 
      article_long 
    set 
      create_time = now() 
    <if test="userId != null">
      , user_id = #{userId}
    </if>
    where article_id = #{articleId}
  </update>

  <select id="getShadowUserId" resultType="Long">
    select
      user_id
    from
      users
    where
      user_id between 50 and 99
  </select>
</mapper>