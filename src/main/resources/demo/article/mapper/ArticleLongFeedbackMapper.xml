<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.article.mapper.ArticleLongFeedbackMapper">
  <resultMap id="BaseResultMap" type="demo.article.pojo.po.ArticleLongFeedback">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="article_creator_id" jdbcType="BIGINT" property="articleCreatorId" />
    <result column="feedback_user_id" jdbcType="BIGINT" property="feedbackUserId" />
    <result column="feedback_user_nickname" jdbcType="CHAR" property="feedbackUserNickname" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="feedback_type" jdbcType="TINYINT" property="feedbackType" />
    <result column="feedback" jdbcType="VARCHAR" property="feedback" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, article_id, article_creator_id, feedback_user_id, feedback_user_nickname, article_title, 
    email, mobile, feedback_type, feedback, create_time
  </sql>
  <select id="selectByExample" parameterType="demo.article.pojo.po.ArticleLongFeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_long_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="demo.article.pojo.po.ArticleLongFeedbackExample">
    delete from article_long_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.article.pojo.po.ArticleLongFeedback">
    insert into article_long_feedback (id, article_id, article_creator_id, 
      feedback_user_id, feedback_user_nickname, article_title, 
      email, mobile, feedback_type, 
      feedback, create_time)
    values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, #{articleCreatorId,jdbcType=BIGINT}, 
      #{feedbackUserId,jdbcType=BIGINT}, #{feedbackUserNickname,jdbcType=CHAR}, #{articleTitle,jdbcType=VARCHAR}, 
      #{email,jdbcType=CHAR}, #{mobile,jdbcType=CHAR}, #{feedbackType,jdbcType=TINYINT}, 
      #{feedback,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="demo.article.pojo.po.ArticleLongFeedback">
    insert into article_long_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="articleCreatorId != null">
        article_creator_id,
      </if>
      <if test="feedbackUserId != null">
        feedback_user_id,
      </if>
      <if test="feedbackUserNickname != null">
        feedback_user_nickname,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="feedbackType != null">
        feedback_type,
      </if>
      <if test="feedback != null">
        feedback,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="articleCreatorId != null">
        #{articleCreatorId,jdbcType=BIGINT},
      </if>
      <if test="feedbackUserId != null">
        #{feedbackUserId,jdbcType=BIGINT},
      </if>
      <if test="feedbackUserNickname != null">
        #{feedbackUserNickname,jdbcType=CHAR},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="feedbackType != null">
        #{feedbackType,jdbcType=TINYINT},
      </if>
      <if test="feedback != null">
        #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.article.pojo.po.ArticleLongFeedbackExample" resultType="java.lang.Long">
    select count(*) from article_long_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article_long_feedback
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.articleCreatorId != null">
        article_creator_id = #{record.articleCreatorId,jdbcType=BIGINT},
      </if>
      <if test="record.feedbackUserId != null">
        feedback_user_id = #{record.feedbackUserId,jdbcType=BIGINT},
      </if>
      <if test="record.feedbackUserNickname != null">
        feedback_user_nickname = #{record.feedbackUserNickname,jdbcType=CHAR},
      </if>
      <if test="record.articleTitle != null">
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.feedbackType != null">
        feedback_type = #{record.feedbackType,jdbcType=TINYINT},
      </if>
      <if test="record.feedback != null">
        feedback = #{record.feedback,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article_long_feedback
    set id = #{record.id,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=BIGINT},
      article_creator_id = #{record.articleCreatorId,jdbcType=BIGINT},
      feedback_user_id = #{record.feedbackUserId,jdbcType=BIGINT},
      feedback_user_nickname = #{record.feedbackUserNickname,jdbcType=CHAR},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=CHAR},
      mobile = #{record.mobile,jdbcType=CHAR},
      feedback_type = #{record.feedbackType,jdbcType=TINYINT},
      feedback = #{record.feedback,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>