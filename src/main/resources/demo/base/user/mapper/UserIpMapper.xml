<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.base.user.mapper.UserIpMapper">
  <resultMap id="BaseResultMap" type="demo.base.user.pojo.po.UserIp">
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="ip" jdbcType="CHAR" property="ip" />
    <result column="forward_ip" jdbcType="CHAR" property="forwardIp" />
    <result column="server_name" jdbcType="CHAR" property="serverName" />
    <result column="uri" jdbcType="CHAR" property="uri" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, ip, forward_ip, server_name, uri, create_time
  </sql>
  <select id="selectByExample" parameterType="demo.base.user.pojo.po.UserIpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_ip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="demo.base.user.pojo.po.UserIpExample">
    delete from user_ip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.base.user.pojo.po.UserIp">
    insert into user_ip (user_id, ip, forward_ip, 
      server_name, uri, create_time
      )
    values (#{userId,jdbcType=BIGINT}, #{ip,jdbcType=CHAR}, #{forwardIp,jdbcType=CHAR}, 
      #{serverName,jdbcType=CHAR}, #{uri,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="demo.base.user.pojo.po.UserIp">
    insert into user_ip
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="forwardIp != null">
        forward_ip,
      </if>
      <if test="serverName != null">
        server_name,
      </if>
      <if test="uri != null">
        uri,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=CHAR},
      </if>
      <if test="forwardIp != null">
        #{forwardIp,jdbcType=CHAR},
      </if>
      <if test="serverName != null">
        #{serverName,jdbcType=CHAR},
      </if>
      <if test="uri != null">
        #{uri,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.base.user.pojo.po.UserIpExample" resultType="java.lang.Long">
    select count(*) from user_ip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_ip
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=CHAR},
      </if>
      <if test="record.forwardIp != null">
        forward_ip = #{record.forwardIp,jdbcType=CHAR},
      </if>
      <if test="record.serverName != null">
        server_name = #{record.serverName,jdbcType=CHAR},
      </if>
      <if test="record.uri != null">
        uri = #{record.uri,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_ip
    set user_id = #{record.userId,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=CHAR},
      forward_ip = #{record.forwardIp,jdbcType=CHAR},
      server_name = #{record.serverName,jdbcType=CHAR},
      uri = #{record.uri,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="demo.base.user.pojo.po.UserIpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_ip
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  
  <insert id="batchInsert">
    insert ignore into user_ip(user_id, ip, forward_ip, server_name, uri, create_time)
    values
    <foreach item="ele" index="index" collection="poList" open="" separator="," close="">
      (
        <if test="ele.userId != null">
          #{ele.userId},
        </if>
        <if test="ele.userId == null">
          null,
        </if>
        <if test="ele.ip != null">
          #{ele.ip},
        </if>
        <if test="ele.ip == null">
          null,
        </if>
        <if test="ele.forwardIp != null">
          #{ele.forwardIp},
        </if>
        <if test="ele.forwardIp == null">
          null,
        </if>
        <if test="ele.serverName != null">
          #{ele.serverName},
        </if>
        <if test="ele.serverName == null">
          null,
        </if>
        <if test="ele.uri != null">
          #{ele.uri},
        </if>
        <if test="ele.uri == null">
          null,
        </if>
        <if test="ele.createTime != null">
          #{ele.createTime}
        </if>
        <if test="ele.createTime == null">
          now()
        </if>
        )
    </foreach>
  </insert>
</mapper>