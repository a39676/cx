<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.base.user.mapper.UsersDetailMapper">
  
  <resultMap id="BaseResultMap" type="demo.base.user.pojo.po.UsersDetail">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nick_name" jdbcType="CHAR" property="nickName" />
    <result column="last_login_ip" jdbcType="BIGINT" property="lastLoginIp" />
    <result column="gender" jdbcType="BIT" property="gender" />
    <result column="qq" jdbcType="BIGINT" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="BIGINT" property="mobile" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="modify_count" jdbcType="INTEGER" property="modifyCount" />
    <result column="reservation_information" jdbcType="VARCHAR" property="reservationInformation" />
    <result column="regist_ip" jdbcType="BIGINT" property="registIp" />
    <result column="private_level" jdbcType="INTEGER" property="privateLevel" />
    <result column="head_image" jdbcType="CHAR" property="headImage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, nick_name, last_login_ip, gender, qq, email, mobile, last_login_time, modify_time, 
    modify_count, reservation_information, regist_ip, private_level, head_image
  </sql>
  <select id="selectByExample" parameterType="demo.base.user.pojo.po.UsersDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users_detail
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from users_detail
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="demo.base.user.pojo.po.UsersDetailExample">
    delete from users_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.base.user.pojo.po.UsersDetail">
    insert into users_detail (user_id, nick_name, last_login_ip, 
      gender, qq, email, mobile, 
      last_login_time, modify_time, modify_count, 
      reservation_information, regist_ip, private_level, 
      head_image)
    values (#{userId,jdbcType=BIGINT}, #{nickName,jdbcType=CHAR}, #{lastLoginIp,jdbcType=BIGINT}, 
      #{gender,jdbcType=BIT}, #{qq,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=BIGINT}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{modifyCount,jdbcType=INTEGER}, 
      #{reservationInformation,jdbcType=VARCHAR}, #{registIp,jdbcType=BIGINT}, #{privateLevel,jdbcType=INTEGER}, 
      #{headImage,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="demo.base.user.pojo.po.UsersDetail">
    insert into users_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="modifyCount != null">
        modify_count,
      </if>
      <if test="reservationInformation != null">
        reservation_information,
      </if>
      <if test="registIp != null">
        regist_ip,
      </if>
      <if test="privateLevel != null">
        private_level,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=CHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=BIGINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=BIT},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyCount != null">
        #{modifyCount,jdbcType=INTEGER},
      </if>
      <if test="reservationInformation != null">
        #{reservationInformation,jdbcType=VARCHAR},
      </if>
      <if test="registIp != null">
        #{registIp,jdbcType=BIGINT},
      </if>
      <if test="privateLevel != null">
        #{privateLevel,jdbcType=INTEGER},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.base.user.pojo.po.UsersDetailExample" resultType="java.lang.Long">
    select count(*) from users_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users_detail
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=CHAR},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=BIGINT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=BIGINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=BIGINT},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyCount != null">
        modify_count = #{record.modifyCount,jdbcType=INTEGER},
      </if>
      <if test="record.reservationInformation != null">
        reservation_information = #{record.reservationInformation,jdbcType=VARCHAR},
      </if>
      <if test="record.registIp != null">
        regist_ip = #{record.registIp,jdbcType=BIGINT},
      </if>
      <if test="record.privateLevel != null">
        private_level = #{record.privateLevel,jdbcType=INTEGER},
      </if>
      <if test="record.headImage != null">
        head_image = #{record.headImage,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users_detail
    set user_id = #{record.userId,jdbcType=BIGINT},
      nick_name = #{record.nickName,jdbcType=CHAR},
      last_login_ip = #{record.lastLoginIp,jdbcType=BIGINT},
      gender = #{record.gender,jdbcType=BIT},
      qq = #{record.qq,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=BIGINT},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      modify_count = #{record.modifyCount,jdbcType=INTEGER},
      reservation_information = #{record.reservationInformation,jdbcType=VARCHAR},
      regist_ip = #{record.registIp,jdbcType=BIGINT},
      private_level = #{record.privateLevel,jdbcType=INTEGER},
      head_image = #{record.headImage,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.base.user.pojo.po.UsersDetail">
    update users_detail
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=CHAR},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=BIGINT},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyCount != null">
        modify_count = #{modifyCount,jdbcType=INTEGER},
      </if>
      <if test="reservationInformation != null">
        reservation_information = #{reservationInformation,jdbcType=VARCHAR},
      </if>
      <if test="registIp != null">
        regist_ip = #{registIp,jdbcType=BIGINT},
      </if>
      <if test="privateLevel != null">
        private_level = #{privateLevel,jdbcType=INTEGER},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.base.user.pojo.po.UsersDetail">
    update users_detail
    set nick_name = #{nickName,jdbcType=CHAR},
      last_login_ip = #{lastLoginIp,jdbcType=BIGINT},
      gender = #{gender,jdbcType=BIT},
      qq = #{qq,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=BIGINT},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_count = #{modifyCount,jdbcType=INTEGER},
      reservation_information = #{reservationInformation,jdbcType=VARCHAR},
      regist_ip = #{registIp,jdbcType=BIGINT},
      private_level = #{privateLevel,jdbcType=INTEGER},
      head_image = #{headImage,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  
  <select id="isNickNameExists" resultType="int">
    select exists(select * from users_detail where nick_name = #{nickName})
  </select>

  <select id="findUserIdByActivationEmail" resultType="Long">
    select
      ud.user_id
    
    from 
      users_detail as ud

      right join user_roles as urs
        on ud.user_id = urs.user_id
        and urs.role_id = #{roleId}
    
    where
      ud.email = #{email}
  </select>

  <select id="findUserNameByActivationEmail" resultType="String">
    select
      ud.user_id
    
    from 
      users_detail as ud

      right join user_roles as urs
        on ud.user_id = urs.user_id
        and urs.role_id = #{roleId}

      left join users as u
        on u.user_id = ud.user_id
    
    where
      ud.email = #{email}
  </select>

  <select id="findEmailByUserId" resultType="String">
    select email from users_detail where user_id = #{userId}
  </select>

  <select id="findUserDetail" resultMap="BaseResultMap">
    select
      *
    from
      users_detail 
    where
      user_id = #{userId}
  </select>

  <select id="findUserDetailByNickName" resultMap="BaseResultMap">
    select
      *
    from
      users_detail as ud
    where
      ud.nick_name = #{nickName}
  </select>

  <update id="modifyRegistEmail">
    update 
      users_detail 
    set
      email = #{email}
    where
      user_id = #{userId}
  </update>

  <select id="findUserEmailAndKey" resultType="demo.base.user.pojo.bo.UserMailAndMailKeyBO">
    select
      ud.user_id as userId,
      ud.email,
      mr.mail_id as mailId,
      mr.mail_key as mailKey,
      mr.mail_type as mailType,
      mr.valid_time as validTime

    from
      users_detail as ud

      left join mail_record as mr
        on ud.user_id = mr.user_id

    where
      mr.was_used = false
      and mr.valid_time &gt;= now()
  </select>

  <update id="updateDuplicateEmail">
    update 
      user_detail
    set
      email = #{newEmail}
    where
      user_id != #{userId} 
      and email = #{oldEmail}
  </update>

  <select id="findHeadImage" resultType="String">
    select head_image from users_detail where user_id = #{userId}
  </select>
</mapper>