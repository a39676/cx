<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.finance.cryptoCoin.data.mapper.CryptoCoinBigMoveMapper">
  <resultMap id="BaseResultMap" type="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMove">
    <id column="symbol" jdbcType="CHAR" property="symbol" />
    <id column="event_time" jdbcType="TIMESTAMP" property="eventTime" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="time_range" jdbcType="INTEGER" property="timeRange" />
    <result column="time_unit_code" jdbcType="INTEGER" property="timeUnitCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    symbol, event_time, rate, time_range, time_unit_code, create_time
  </sql>
  <select id="selectByExample" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMoveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crypto_coin_big_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMoveKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crypto_coin_big_move
    where symbol = #{symbol,jdbcType=CHAR}
      and event_time = #{eventTime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMoveKey">
    delete from crypto_coin_big_move
    where symbol = #{symbol,jdbcType=CHAR}
      and event_time = #{eventTime,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMoveExample">
    delete from crypto_coin_big_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMove">
    insert into crypto_coin_big_move (symbol, event_time, rate, 
      time_range, time_unit_code, create_time
      )
    values (#{symbol,jdbcType=CHAR}, #{eventTime,jdbcType=TIMESTAMP}, #{rate,jdbcType=DECIMAL}, 
      #{timeRange,jdbcType=INTEGER}, #{timeUnitCode,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMove">
    insert into crypto_coin_big_move
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        symbol,
      </if>
      <if test="eventTime != null">
        event_time,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="timeRange != null">
        time_range,
      </if>
      <if test="timeUnitCode != null">
        time_unit_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="symbol != null">
        #{symbol,jdbcType=CHAR},
      </if>
      <if test="eventTime != null">
        #{eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="timeRange != null">
        #{timeRange,jdbcType=INTEGER},
      </if>
      <if test="timeUnitCode != null">
        #{timeUnitCode,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMoveExample" resultType="java.lang.Long">
    select count(*) from crypto_coin_big_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update crypto_coin_big_move
    <set>
      <if test="row.symbol != null">
        symbol = #{row.symbol,jdbcType=CHAR},
      </if>
      <if test="row.eventTime != null">
        event_time = #{row.eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.rate != null">
        rate = #{row.rate,jdbcType=DECIMAL},
      </if>
      <if test="row.timeRange != null">
        time_range = #{row.timeRange,jdbcType=INTEGER},
      </if>
      <if test="row.timeUnitCode != null">
        time_unit_code = #{row.timeUnitCode,jdbcType=INTEGER},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update crypto_coin_big_move
    set symbol = #{row.symbol,jdbcType=CHAR},
      event_time = #{row.eventTime,jdbcType=TIMESTAMP},
      rate = #{row.rate,jdbcType=DECIMAL},
      time_range = #{row.timeRange,jdbcType=INTEGER},
      time_unit_code = #{row.timeUnitCode,jdbcType=INTEGER},
      create_time = #{row.createTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMove">
    update crypto_coin_big_move
    <set>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="timeRange != null">
        time_range = #{timeRange,jdbcType=INTEGER},
      </if>
      <if test="timeUnitCode != null">
        time_unit_code = #{timeUnitCode,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where symbol = #{symbol,jdbcType=CHAR}
      and event_time = #{eventTime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMove">
    update crypto_coin_big_move
    set rate = #{rate,jdbcType=DECIMAL},
      time_range = #{timeRange,jdbcType=INTEGER},
      time_unit_code = #{timeUnitCode,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where symbol = #{symbol,jdbcType=CHAR}
      and event_time = #{eventTime,jdbcType=TIMESTAMP}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="demo.finance.cryptoCoin.data.pojo.po.CryptoCoinBigMoveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crypto_coin_big_move
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>