<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.image.mapper.ImageStoreMapper">
  <resultMap id="BaseResultMap" type="demo.image.pojo.po.ImageStore">
    <id column="image_id" jdbcType="BIGINT" property="imageId" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="image_name" jdbcType="VARCHAR" property="imageName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="backup_time" jdbcType="TIMESTAMP" property="backupTime" />
    <result column="md5_mark" jdbcType="CHAR" property="md5Mark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    image_id, image_url, image_name, create_time, backup_time, md5_mark
  </sql>
  <select id="selectByExample" parameterType="demo.image.pojo.po.ImageStoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from image_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from image_store
    where image_id = #{imageId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from image_store
    where image_id = #{imageId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="demo.image.pojo.po.ImageStoreExample">
    delete from image_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.image.pojo.po.ImageStore">
    insert into image_store (image_id, image_url, image_name, 
      create_time, backup_time, md5_mark
      )
    values (#{imageId,jdbcType=BIGINT}, #{imageUrl,jdbcType=VARCHAR}, #{imageName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{backupTime,jdbcType=TIMESTAMP}, #{md5Mark,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="demo.image.pojo.po.ImageStore">
    insert into image_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="imageId != null">
        image_id,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="imageName != null">
        image_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="backupTime != null">
        backup_time,
      </if>
      <if test="md5Mark != null">
        md5_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="imageId != null">
        #{imageId,jdbcType=BIGINT},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageName != null">
        #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backupTime != null">
        #{backupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="md5Mark != null">
        #{md5Mark,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.image.pojo.po.ImageStoreExample" resultType="java.lang.Long">
    select count(*) from image_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update image_store
    <set>
      <if test="record.imageId != null">
        image_id = #{record.imageId,jdbcType=BIGINT},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.imageName != null">
        image_name = #{record.imageName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backupTime != null">
        backup_time = #{record.backupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.md5Mark != null">
        md5_mark = #{record.md5Mark,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update image_store
    set image_id = #{record.imageId,jdbcType=BIGINT},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      image_name = #{record.imageName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      backup_time = #{record.backupTime,jdbcType=TIMESTAMP},
      md5_mark = #{record.md5Mark,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.image.pojo.po.ImageStore">
    update image_store
    <set>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageName != null">
        image_name = #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backupTime != null">
        backup_time = #{backupTime,jdbcType=TIMESTAMP},
      </if>
      <if test="md5Mark != null">
        md5_mark = #{md5Mark,jdbcType=CHAR},
      </if>
    </set>
    where image_id = #{imageId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.image.pojo.po.ImageStore">
    update image_store
    set image_url = #{imageUrl,jdbcType=VARCHAR},
      image_name = #{imageName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      backup_time = #{backupTime,jdbcType=TIMESTAMP},
      md5_mark = #{md5Mark,jdbcType=CHAR}
    where image_id = #{imageId,jdbcType=BIGINT}
  </update>
  
  <select id="checkImageExistsByMD5" parameterType="String" resultType="Integer">
    select exists(
      select 1 from image_store where md5_mark = #{md5}
    );
  </select>
  
  <insert id="batchInsert">
    insert ignore
      image_store (
        image_id,
        image_url,
        image_name,
        create_time
      )
    values
    <foreach item="imageStore" index="index" collection="list"
      open="" separator="," close="">
      (
        #{imageStore.imageId}, 
        #{imageStore.imageUrl}, 
        #{imageStore.imageName}, 
        #{imageStore.createTime}
      )
    </foreach>
  </insert>

  <select id="findImageIdByMd5Mark" resultMap="BaseResultMap">
    select
      image_id,
      md5_mark
    from
      image_store
    where
      md5_mark in
      <foreach item="md5" index="index" collection="md5s"
        open="(" separator="," close=")">
          #{md5}
      </foreach>
  </select>
</mapper>