<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.toyParts.educate.mapper.StudentExerciseHistoryMapper">
  <resultMap id="BaseResultMap" type="demo.toyParts.educate.pojo.po.StudentExerciseHistory">
    <id column="exercise_id" jdbcType="BIGINT" property="exerciseId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="subject_type" jdbcType="BIGINT" property="subjectType" />
    <result column="grade_type" jdbcType="BIGINT" property="gradeType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="compeletion_time" jdbcType="TIMESTAMP" property="compeletionTime" />
    <result column="score" jdbcType="DECIMAL" property="score" />
    <result column="points" jdbcType="DECIMAL" property="points" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="match_grade_type" jdbcType="INTEGER" property="matchGradeType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    exercise_id, user_id, subject_type, grade_type, create_time, compeletion_time, score, 
    points, file_path, match_grade_type
  </sql>
  <select id="selectByExample" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_exercise_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_exercise_history
    where exercise_id = #{exerciseId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student_exercise_history
    where exercise_id = #{exerciseId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistoryExample">
    delete from student_exercise_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistory">
    insert into student_exercise_history (exercise_id, user_id, subject_type, 
      grade_type, create_time, compeletion_time, 
      score, points, file_path, 
      match_grade_type)
    values (#{exerciseId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{subjectType,jdbcType=BIGINT}, 
      #{gradeType,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{compeletionTime,jdbcType=TIMESTAMP}, 
      #{score,jdbcType=DECIMAL}, #{points,jdbcType=DECIMAL}, #{filePath,jdbcType=VARCHAR}, 
      #{matchGradeType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistory">
    insert into student_exercise_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="exerciseId != null">
        exercise_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="subjectType != null">
        subject_type,
      </if>
      <if test="gradeType != null">
        grade_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="compeletionTime != null">
        compeletion_time,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="matchGradeType != null">
        match_grade_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="exerciseId != null">
        #{exerciseId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="subjectType != null">
        #{subjectType,jdbcType=BIGINT},
      </if>
      <if test="gradeType != null">
        #{gradeType,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compeletionTime != null">
        #{compeletionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="points != null">
        #{points,jdbcType=DECIMAL},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="matchGradeType != null">
        #{matchGradeType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistoryExample" resultType="java.lang.Long">
    select count(*) from student_exercise_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_exercise_history
    <set>
      <if test="row.exerciseId != null">
        exercise_id = #{row.exerciseId,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.subjectType != null">
        subject_type = #{row.subjectType,jdbcType=BIGINT},
      </if>
      <if test="row.gradeType != null">
        grade_type = #{row.gradeType,jdbcType=BIGINT},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.compeletionTime != null">
        compeletion_time = #{row.compeletionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.score != null">
        score = #{row.score,jdbcType=DECIMAL},
      </if>
      <if test="row.points != null">
        points = #{row.points,jdbcType=DECIMAL},
      </if>
      <if test="row.filePath != null">
        file_path = #{row.filePath,jdbcType=VARCHAR},
      </if>
      <if test="row.matchGradeType != null">
        match_grade_type = #{row.matchGradeType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_exercise_history
    set exercise_id = #{row.exerciseId,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      subject_type = #{row.subjectType,jdbcType=BIGINT},
      grade_type = #{row.gradeType,jdbcType=BIGINT},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      compeletion_time = #{row.compeletionTime,jdbcType=TIMESTAMP},
      score = #{row.score,jdbcType=DECIMAL},
      points = #{row.points,jdbcType=DECIMAL},
      file_path = #{row.filePath,jdbcType=VARCHAR},
      match_grade_type = #{row.matchGradeType,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistory">
    update student_exercise_history
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="subjectType != null">
        subject_type = #{subjectType,jdbcType=BIGINT},
      </if>
      <if test="gradeType != null">
        grade_type = #{gradeType,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="compeletionTime != null">
        compeletion_time = #{compeletionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=DECIMAL},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="matchGradeType != null">
        match_grade_type = #{matchGradeType,jdbcType=INTEGER},
      </if>
    </set>
    where exercise_id = #{exerciseId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistory">
    update student_exercise_history
    set user_id = #{userId,jdbcType=BIGINT},
      subject_type = #{subjectType,jdbcType=BIGINT},
      grade_type = #{gradeType,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      compeletion_time = #{compeletionTime,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=DECIMAL},
      points = #{points,jdbcType=DECIMAL},
      file_path = #{filePath,jdbcType=VARCHAR},
      match_grade_type = #{matchGradeType,jdbcType=INTEGER}
    where exercise_id = #{exerciseId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="demo.toyParts.educate.pojo.po.StudentExerciseHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_exercise_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>